version: "3.7"
services:


  dataloaders:
    container_name: dataloaders
    build:
      context: /nodes/dataloaders
      dockerfile: Dockerfile
    volumes:
      - ./nodes/dataloaders:/data
    networks:
      nodes:

  model:
    container_name: model
    build:
      context: /nodes/model
      dockerfile: Dockerfile
    volumes:
      - ./nodes/model:/data
    networks:
      nodes:

  train:
    container_name: train
    build:
      context: /nodes/train
      dockerfile: Dockerfile
    volumes:
      - ./nodes/train:/data
    networks:
      nodes:

  predict:
    container_name: predict
    build:
      context: /nodes/predict
      dockerfile: Dockerfile
    volumes:
      - ./nodes/predict:/data
    networks:
      nodes:

  main-node:
    container_name: main-node
    build:
      context: /nodes/main-node
      dockerfile: Dockerfile
    volumes:
      - ./nodes/main-node:/data
    networks:
      nodes:

  nodered:
    image: nodered/node-red
    ports:
      - "1880:1880"
    volumes:
      - ./node-red:/data
      - dataloaders:/nodes/dataloaders
      - model:/nodes/model
      - train:/nodes/train
      - predict:/nodes/predict
    depends_on:
      - main-node
      - dataloaders
      - model
      - train
      - predict

    environment:
      - TZ=Europe/Moscow
    restart: always

networks:
  nodes:
    name: nodes
    driver: bridge

volumes:
  main-node:
  dataloaders:
  model:
  train:
  predict:
  nodered:

